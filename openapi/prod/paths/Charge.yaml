paths:
  Charge:
    post:
      tags:
        - Методы приема платежей
      summary: Charge
      description: |
        **Описание**: Осуществляет рекуррентный (повторный) платеж — безакцептное списание денежных
        средств со счета банковской карты Покупателя.  
        Для возможности его использования Покупатель должен совершить хотя бы один платеж в пользу
        Продавца, который должен быть указан как рекуррентный (см. параметр **Recurrent** методе **Init**),
        фактически являющийся первичным. По завершении оплаты в нотификации на **AUTHORIZED** или
        **CONFIRMED** будет передан параметр **RebillId**.  
        В дальнейшем для совершения рекуррентного платежа Продавец должен вызвать метод **Init**, а затем
        без переадресации на **PaymentURL** вызвать метод **Charge** для оплаты по тем же самым реквизитам и
        передать параметр **RebillId**, полученный при совершении первичного платежа.  
        Метод Charge работает по одностадийной и двухстадийной схеме оплаты. Чтобы перейти на
        двухстадийную схему нужно переключить терминал в Личном кабинете [https://oplata.tinkoff.ru](https://oplata.tinkoff.ru),
        а также написать обращение на <acq_help@tinkoff.ru> с просьбой переключить схему рекуррентов.  

        Для использования рекуррентных платежей по одностадийной схеме необходима следующая
        последовательность действий:
        1. Совершить родительский платеж путем вызова **Init** с указанием дополнительных параметров
        **Recurrent=Y** и **CustomerKey**.
        2. Вызвать метод **Check3dsVersion** для проверки ожидаемой версии **3DS** протокола.
        3. Вызвать метод **FinishAuthorize** для оплаты заказа. При необходимости, проверить прохождение
        3DS проверки методами Submit3DSAuthorization/Submit3DSAuthorizationV2 в зависимости от
        версии 3DS. После оплаты заказа Покупателем в нотификации на статус **AUTHORIZED** или
        **CONFIRMED** будет передан параметр **RebillId**, который необходимо сохранить.
        4. Спустя некоторое время для совершения рекуррентного платежа необходимо вызвать метод **Init**
        со стандартным набором параметров (параметры **Recurrent** и **CustomerKey** здесь не нужны).
        5. Получить в ответ на **Init** параметр **PaymentId**.
        6. Вызвать метод **Charge** с параметром **RebillId**, полученным в п.3, и параметром **PaymentId**,
        полученным в п.5. При успешном сценарии операция перейдет в статус **CONFIRMED**.  

        Для использования рекуррентных платежей по двухстадийной схеме необходима следующая
        последовательность действий:
        1. Совершить родительский платеж путем вызова **Init** с указанием дополнительных параметров
        **Recurrent=Y** и **CustomerKey**.
        2. Вызвать метод **Check3dsVersion** для проверки ожидаемой версии 3DS протокола.
        3. Вызвать метод **FinishAuthorize** для оплаты заказа. При необходимости, проверить
        прохождение 3DS проверки методами Submit3DSAuthorization/Submit3DSAuthorizationV2 в
        зависимости от версии 3DS. После оплаты заказа Покупателем в нотификации на статус
        **AUTHORIZED** или **CONFIRMED** будет передан параметр **RebillId**, который необходимо
        сохранить.
        4. Вызвать метод **Confirm** для подтверждения платежа. При необходимости отмены платежа
        вызвать метод **Cancel**.
        5. Спустя некоторое время для совершения рекуррентного платежа необходимо вызвать метод
        **Init** со стандартным набором параметров (параметры **Recurrent** и **CustomerKey** здесь не
        нужны).
        6. Получить в ответ на **Init** параметр **PaymentId**
        7. Вызвать метод **Charge** с параметром **RebillId**, полученным в п.3, и параметром **PaymentId**,
        полученным в п.5. При успешном сценарии операция перейдет в статус **AUTHORIZED**.
        Денежные средства будут заблокированы на карте покупателя.
        8. Вызвать метод **Confirm** для подтверждения платежа.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Информация: </b>Данный метод используется в <b>SDK</b>  для Мобильной интеграции.<br>
        Схему для SDK смотреть в табе <b>Charge_SDK</b></p><br>
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              oneOf:
                - $ref: ../components/schemas/Charge_FULL.yaml
                - $ref: ../components/schemas/Charge_SDK.yaml
      responses: 
        '200':
          description: OK
          content: 
            application/json: 
              schema: 
                type: object
                required: 
                  - TerminalKey
                  - Amount
                  - OrderId
                  - Success
                  - PaymentId
                  - ErrorCode
                properties: 
                  TerminalKey:
                    description: |
                      Идентификатор терминала. Выдается продавцу банком 
                      при заведении терминала.
                    type: string
                    maxLength: 20
                    example: TinkoffBankTest
                  Amount:
                    description: |
                      Сумма в копейках
                    type: number
                    maxLength: 20
                    example: 100000
                  OrderId:
                    description: |
                      Идентификатор заказа в системе продавца
                    type: string
                    maxLength: 36
                    example: 21050
                  Success:
                    description: |
                      Выполнение платежа
                    type: boolean
                    example: true
                  Status:
                    description: |
                      Статус платежа 
                      
                      Получает в ответе 1 из 2 статусов:
                      * CONFIRMED - Если платеж выполнен
                      * REJECTED - Если платеж не выполнен
                    type: string
                    maxLength: 20
                    example: NEW
                  PaymentId:
                    description: |
                      Идентификатор платежа в системе банка
                    type: number
                    maxLength: 20
                    example: 13660
                  ErrorCode:
                    description: |
                      Код ошибки.
                      Если ошибки не произошло, передайте значение «0»
                    type: string
                    maxLength: 20
                    example: 0
                  Message:
                    description: |
                      Краткое описание ошибки
                    type: string
                  Details:
                    description: |
                      Подробное описание ошибки
                    type: string
                  # PARAMS THAT USE IN ANDROID SDK ONLY
                  CardId:
                    description: Идентификатор сохраненной карты в системе банка
                    type: string
                    example: 881900